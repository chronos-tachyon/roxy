syntax = "proto3";

option go_package = "github.com/chronos-tachyon/roxy/roxypb";

package roxy;

service WebServer {
  rpc Serve (stream WebMessage) returns (stream WebMessage) {}
}

message WebMessage {
  bytes body_chunk = 1;
  repeated KeyValue headers = 2;
  repeated KeyValue trailers = 3;
}

message KeyValue {
  string key = 1;
  string value = 2;
}

service AirTrafficControl {
  rpc Report (stream ReportRequest) returns (ReportResponse) {}
  rpc Balance (stream BalanceRequest) returns (stream BalanceResponse) {}
}

message ReportRequest {
  message FirstReport {
    string name = 1;
    string unique = 2;
    string location = 3;
    string server_name = 4;
    int32 shard_id = 5;
    bytes ip = 6;
    string zone = 7;
    uint32 port = 8;
    bool has_shard_id = 16;
  }
  float load = 1;
  FirstReport first_report = 2;
}

message ReportResponse {
}

message BalanceRequest {
  string name = 1;
  string location = 2;
}

message BalanceResponse {
  repeated Event events = 1;
  string name = 2;
  bool is_sharded = 3;
}

message Event {
  enum Type {
    UNKNOWN = 0;
    INSERT_IP = 1;
    DELETE_IP = 2;
    UPDATE_WEIGHT = 3;
    NEW_SERVICE_CONFIG = 4;
  }
  Type event_type = 1;
  string unique = 2;
  string location = 3;
  string server_name = 4;
  int32 shard_id = 5;
  bytes ip = 6;
  string zone = 7;
  uint32 port = 8;
  float weight = 9;
  string service_config_json = 64;
}

service Admin {
  rpc Ping (PingRequest) returns (PingResponse) {}
  rpc Reload (ReloadRequest) returns (ReloadResponse) {}
  rpc Shutdown (ShutdownRequest) returns (ShutdownResponse) {}
}

message PingRequest {
}

message PingResponse {
}

message ReloadRequest {
}

message ReloadResponse {
}

message ShutdownRequest {
}

message ShutdownResponse {
}
